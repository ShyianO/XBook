{"version":3,"sources":["./src/app/landing/components/login/login.component.ts","./src/app/landing/components/login/login.component.html","./src/app/store/landing.action.ts","./src/app/landing/components/homepage/homepage.component.ts","./src/app/landing/components/homepage/homepage.component.html","./src/environments/environment.ts","./src/app/landing/components/about/about.component.ts","./src/app/landing/components/about/about.component.html","./src/app/core/services/backendless.service.ts","./src/app/landing/components/main/main.component.ts","./src/app/landing/components/main/main.component.html","./src/app/landing/components/register/register.component.ts","./src/app/landing/components/register/register.component.html","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/landing/components/contacts/contacts.component.ts","./src/app/landing/components/contacts/contacts.component.html","./src/app/landing/landing-routing.module.ts","./src/app/landing/landing.module.ts","./src/app/landing/components/alert/alert.component.ts","./src/app/landing/components/alert/alert.component.html","./src/app/app.module.ts","./src/app/store/landing.state.ts","./src/app/landing/components/footer/footer.component.ts","./src/app/landing/components/footer/footer.component.html","./src/app/core/services/translation.service.ts","./src/app/landing/components/header/header.component.html","./src/app/landing/components/header/header.component.ts","./src/app/app-routing.module.ts","./src/app/core/services/startup.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {}\n","<h1>Hello</h1>\n","import { IRegisterRequest } from '../core/interfaces/register.interface';\r\nimport { IMessageRequest } from '../core/interfaces/message.interface';\r\n\r\nexport class RegisterUser {\r\n  static readonly type = '[User] Register';\r\n  constructor(public user: IRegisterRequest) {}\r\n}\r\n\r\nexport class RegisterUserSuccess {\r\n  static readonly type = '[User] RegisterSuccess';\r\n  constructor(public user: IRegisterRequest) {}\r\n}\r\n\r\nexport class RegisterUserError {\r\n  static readonly type = '[User] RegisterError';\r\n}\r\n\r\nexport class UserExists {\r\n  static readonly type = '[User] Exist';\r\n  constructor(public username: string) {}\r\n}\r\n\r\nexport class SendMessage {\r\n  static readonly type = '[Message] Send';\r\n  constructor(public message: IMessageRequest) {}\r\n}\r\n\r\nexport class SendMessageSuccess {\r\n  static readonly type = '[Message] SendSuccess';\r\n}\r\n\r\nexport class SendMessageError {\r\n  static readonly type = '[Message] SendError';\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss']\n})\nexport class HomepageComponent {\n  scrollToElement($element): void {\n    $element.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start'\n    });\n  }\n}\n","<main class=\"homepage\">\n  <div class=\"homepage-container\">\n    <div>\n      <h1 class=\"homepage-container__heading mat-headline\">XBOOK</h1>\n      <h2 class=\"homepage-container__title mat-title\">\n        {{ 'HOMEPAGE.CONTAINER.TITLE' | translate }}\n      </h2>\n    </div>\n\n    <div class=\"homepage-container__link\">\n      <a mat-raised-button (click)=\"scrollToElement(registerForm)\">{{\n        'HOMEPAGE.CONTAINER.LINK' | translate\n      }}</a>\n    </div>\n  </div>\n\n  <section class=\"homepage-section\">\n    <article class=\"homepage-section__article\">\n      <h3 class=\"homepage-section__article-heading\">\n        {{ 'HOMEPAGE.SECTION.ARTICLE1.H3' | translate }}\n      </h3>\n      <p class=\"homepage-section__article-paragraph\">\n        {{ 'HOMEPAGE.SECTION.ARTICLE1.P1' | translate }}\n      </p>\n      <p class=\"homepage-section__article-paragraph\">\n        {{ 'HOMEPAGE.SECTION.ARTICLE1.P2' | translate }}\n      </p>\n    </article>\n\n    <article class=\"homepage-section__article\">\n      <h3 class=\"homepage-section__article-heading\">\n        {{ 'HOMEPAGE.SECTION.ARTICLE2.H3' | translate }}\n      </h3>\n      <p class=\"homepage-section__article-paragraph\">\n        {{ 'HOMEPAGE.SECTION.ARTICLE2.P1' | translate }}\n      </p>\n      <p class=\"homepage-section__article-paragraph\">\n        {{ 'HOMEPAGE.SECTION.ARTICLE2.P2' | translate }}\n      </p>\n    </article>\n\n    <article class=\"homepage-section__article\">\n      <h3 class=\"homepage-section__article-heading\">\n        {{ 'HOMEPAGE.SECTION.ARTICLE3.H3' | translate }}\n      </h3>\n      <p class=\"homepage-section__article-paragraph\">\n        {{ 'HOMEPAGE.SECTION.ARTICLE3.P1' | translate }}\n      </p>\n      <p class=\"homepage-section__article-paragraph\">\n        {{ 'HOMEPAGE.SECTION.ARTICLE3.P2' | translate }}\n      </p>\n    </article>\n  </section>\n\n  <mat-divider class=\"homepage-divider\"></mat-divider>\n</main>\n\n<div #registerForm>\n  <app-register></app-register>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendless: {\n    APP_ID: '2FA3E688-ADE5-556D-FFA2-2F42B5F5FB00',\n    API_KEY: 'CB2A4850-B144-4F23-9C45-5C4D2BC2FF04'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent {}\n","<section class=\"about\">\n  <div class=\"about__nav\">\n    <h1 class=\"about__nav-heading\">About us</h1>\n  </div>\n  <div class=\"about__content\">\n    <div>\n      <h1 class=\"about__heading-lg mat-h1\">\n        Getting Started with Angular Material\n      </h1>\n      <p class=\"about__paragraph\">\n        This guide explains how to set up your Angular project to begin using\n        Angular Material. It includes information on prerequisites, installing\n        Angular Material, and optionally displaying a sample material component\n        in your application to verify your setup.\n      </p>\n      <p class=\"about__paragraph\">Angular Resources</p>\n      <p class=\"about__paragraph\">\n        If you are new to Angular or getting started with a new Angular\n        application, see Angular's full Getting Started Guide and Setting up\n        your environment.\n      </p>\n      <p class=\"about__paragraph\">\n        For existing applications, follow the steps below to begin using Angular\n        Material.\n      </p>\n    </div>\n\n    <div>\n      <h2 class=\"about__heading-md mat-h2\">Install Angular Material</h2>\n      <p class=\"about__paragraph\">\n        Use the Angular CLI's installation schematic to set up your Angular\n        Material project by running the following command:\n      </p>\n      <pre>ng add @angular/material</pre>\n      <p class=\"about__paragraph\">\n        The ng add command will install Angular Material, the Component Dev Kit\n        (CDK), Angular Animations and ask you the following questions to\n        determine which features to include:\n      </p>\n\n      <ol>\n        <li>\n          <p>Choose a prebuilt theme name, or \"custom\" for a custom theme:</p>\n          <p>\n            You can choose from prebuilt material design themes or set up an\n            extensible custom theme.\n          </p>\n        </li>\n        <li>\n          <p>Set up global Angular Material typography styles:</p>\n          <p>\n            Whether to apply the global typography styles to your application.\n          </p>\n        </li>\n        <li>\n          <p>Set up browser animations for Angular Material:</p>\n          <p>\n            Importing the BrowserAnimationsModule into your application enables\n            Angular's animation system. Declining this will disable most of\n            Angular Material's animations.\n          </p>\n        </li>\n      </ol>\n\n      <p class=\"about__paragraph\">\n        The ng add command will additionally perform the following\n        configurations:\n      </p>\n\n      <ul>\n        <li>Add project dependencies to package.json</li>\n        <li>Add the Roboto font to your index.html</li>\n        <li>Add the Material Design icon font to your index.html</li>\n        <li>\n          Add a few global CSS styles to:\n          <ul>\n            <li>Remove margins from body</li>\n            <li>Set height: 100% on html and body</li>\n            <li>Set Roboto as the default application font</li>\n          </ul>\n        </li>\n      </ul>\n      <p class=\"about__paragraph\">\n        You're done! Angular Material is now configured to be used in your\n        application.\n      </p>\n    </div>\n  </div>\n</section>\n","import { Injectable } from '@angular/core';\nimport Backendless from 'backendless';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackendlessService {\n  init(): void {\n    Backendless.serverURL = 'https://eu-api.backendless.com';\n    Backendless.initApp(\n      environment.backendless.APP_ID,\n      environment.backendless.API_KEY\n    );\n  }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent {}\r\n","<mat-sidenav-container class=\"container\">\r\n  <mat-sidenav-content class=\"content\">\r\n    <app-header></app-header>\r\n\r\n    <router-outlet style=\"margin-top: 64px\"></router-outlet>\r\n\r\n    <app-footer></app-footer>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import {\r\n  Component,\r\n  DoCheck,\r\n  ElementRef,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  ValidationErrors,\r\n  Validators\r\n} from '@angular/forms';\r\nimport { Actions, ofActionDispatched, Select, Store } from '@ngxs/store';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { fromEvent, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, map, takeUntil } from 'rxjs/operators';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport {\r\n  RegisterUser,\r\n  RegisterUserError,\r\n  RegisterUserSuccess,\r\n  UserExists\r\n} from '../../../store/landing.action';\r\nimport { AlertComponent } from '../alert/alert.component';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy, DoCheck {\r\n  loginForm: FormGroup;\r\n  hide = true;\r\n  subject = new Subject();\r\n  userExists: boolean;\r\n  successTitle: string;\r\n  successDescription: string;\r\n  errorTitle: string;\r\n  errorDescription: string;\r\n\r\n  @ViewChild('usernameInput', { static: true }) usernameInput: ElementRef;\r\n\r\n  @Select((state) => state.landingState.loading)\r\n  loading$: Observable<boolean>;\r\n\r\n  @Select((state) => state.landingState.userExists)\r\n  userExists$: Observable<boolean>;\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(30),\r\n        Validators.pattern('[a-zA-Z ]*'),\r\n        () => this.validateUsername()\r\n      ]),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(30),\r\n        Validators.pattern('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{4,20}')\r\n      ]),\r\n      confirmPassword: new FormControl('', [Validators.required])\r\n    });\r\n\r\n    this.userExists$\r\n      .pipe(takeUntil(this.subject))\r\n      .subscribe((value: boolean) => {\r\n        this.userExists = value;\r\n        this.username.updateValueAndValidity();\r\n      });\r\n\r\n    this.actions$\r\n      .pipe(ofActionDispatched(RegisterUserSuccess), takeUntil(this.subject))\r\n      .subscribe(() => {\r\n        this.dialog.open(AlertComponent, {\r\n          data: {\r\n            title: this.successTitle,\r\n            description: this.successDescription,\r\n            style: 'primary',\r\n            icon: 'check_circle',\r\n            redirectTo: '/landing/login'\r\n          }\r\n        });\r\n      });\r\n\r\n    this.actions$\r\n      .pipe(ofActionDispatched(RegisterUserError), takeUntil(this.subject))\r\n      .subscribe(() => {\r\n        this.dialog.open(AlertComponent, {\r\n          data: {\r\n            title: this.errorTitle,\r\n            description: this.errorDescription,\r\n            style: 'warn',\r\n            icon: 'error_outline'\r\n          }\r\n        });\r\n      });\r\n\r\n    fromEvent(this.usernameInput.nativeElement, 'keyup')\r\n      .pipe(\r\n        map((event: any) => {\r\n          return event.target.value;\r\n        }),\r\n        debounceTime(500),\r\n        takeUntil(this.subject)\r\n      )\r\n      .subscribe((username) => {\r\n        this.store.dispatch(new UserExists(username));\r\n      });\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    this.translate\r\n      .get('ALERT.REGISTER.SUCCESS')\r\n      .pipe(takeUntil(this.subject))\r\n      .subscribe((translated) => {\r\n        this.successTitle = translated.TITLE;\r\n        this.successDescription = translated.DESCRIPTION;\r\n      });\r\n\r\n    this.translate\r\n      .get('ALERT.REGISTER.ERROR')\r\n      .pipe(takeUntil(this.subject))\r\n      .subscribe((translated) => {\r\n        this.errorTitle = translated.TITLE;\r\n        this.errorDescription = translated.DESCRIPTION;\r\n      });\r\n  }\r\n\r\n  get username(): AbstractControl {\r\n    return this.loginForm.get('username');\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return this.loginForm.get('email');\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return this.loginForm.get('password');\r\n  }\r\n\r\n  get confirmPassword(): AbstractControl {\r\n    return this.loginForm.get('confirmPassword');\r\n  }\r\n\r\n  constructor(\r\n    private store: Store,\r\n    public dialog: MatDialog,\r\n    private actions$: Actions,\r\n    public translate: TranslateService\r\n  ) {}\r\n\r\n  onSubmit({\r\n    value,\r\n    valid\r\n  }: {\r\n    value: Record<string, string>;\r\n    valid: boolean;\r\n  }): void {\r\n    if (valid) {\r\n      const userRequest = {\r\n        email: value.email,\r\n        username: value.username,\r\n        password: value.password\r\n      };\r\n\r\n      this.store.dispatch(new RegisterUser(userRequest));\r\n    }\r\n  }\r\n\r\n  validateUsername(): ValidationErrors {\r\n    return this.userExists\r\n      ? {\r\n          validateUsername: {\r\n            valid: false\r\n          }\r\n        }\r\n      : null;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subject.next();\r\n    this.subject.complete();\r\n  }\r\n}\r\n","<section class=\"register-section\">\r\n  <h2 class=\"register-section__heading mat-h2\">\r\n    {{ 'REGISTER.TITLE' | translate }}\r\n  </h2>\r\n\r\n  <form\r\n    class=\"register-section__form\"\r\n    novalidate\r\n    [formGroup]=\"loginForm\"\r\n    (ngSubmit)=\"onSubmit(loginForm)\"\r\n  >\r\n    <mat-form-field class=\"register-section__form-field\" appearance=\"outline\">\r\n      <mat-label>{{\r\n        'REGISTER.FORM.USERNAMEFIELD.LABEL' | translate\r\n      }}</mat-label>\r\n      <input\r\n        matInput\r\n        type=\"text\"\r\n        formControlName=\"username\"\r\n        required\r\n        autocomplete=\"off\"\r\n        #usernameInput\r\n      />\r\n      <mat-hint>{{ 'REGISTER.FORM.USERNAMEFIELD.HINT' | translate }}</mat-hint>\r\n\r\n      <mat-error *ngIf=\"username.invalid\">\r\n        <div *ngIf=\"username.errors.required\">\r\n          {{ 'REGISTER.FORM.USERNAMEFIELD.ERROR.REQUIRED' | translate }}\r\n        </div>\r\n        <div *ngIf=\"username.errors.pattern || username.errors.maxlength\">\r\n          {{ 'REGISTER.FORM.USERNAMEFIELD.ERROR.PATTERN' | translate }}\r\n        </div>\r\n        <div *ngIf=\"userExists\">\r\n          {{ 'REGISTER.FORM.USERNAMEFIELD.ERROR.USEREXISTS' | translate }}\r\n        </div>\r\n      </mat-error>\r\n      <span\r\n        *ngIf=\"!username.invalid\"\r\n        class=\"material-icons register-section__form-suffix\"\r\n        matSuffix\r\n        >check_circle</span\r\n      >\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"register-section__form-field\" appearance=\"outline\">\r\n      <mat-label>{{ 'REGISTER.FORM.EMAILFIELD.LABEL' | translate }}</mat-label>\r\n      <input\r\n        matInput\r\n        type=\"email\"\r\n        placeholder=\"pat@example.com\"\r\n        formControlName=\"email\"\r\n        autocomplete=\"off\"\r\n        required\r\n      />\r\n      <mat-hint>{{ 'REGISTER.FORM.EMAILFIELD.HINT' | translate }}</mat-hint>\r\n\r\n      <mat-error *ngIf=\"email.invalid\">\r\n        <div *ngIf=\"email.errors.required\">\r\n          {{ 'REGISTER.FORM.EMAILFIELD.ERROR.REQUIRED' | translate }}\r\n        </div>\r\n        <div *ngIf=\"email.errors.email\">\r\n          {{ 'REGISTER.FORM.EMAILFIELD.ERROR.PATTERN' | translate }}\r\n        </div>\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"register-section__form-field\" appearance=\"outline\">\r\n      <mat-label>{{\r\n        'REGISTER.FORM.PASSWORDFIELD.LABEL' | translate\r\n      }}</mat-label>\r\n      <input\r\n        matInput\r\n        type=\"password\"\r\n        formControlName=\"password\"\r\n        [type]=\"hide ? 'password' : 'text'\"\r\n        autocomplete=\"off\"\r\n        required\r\n      />\r\n      <mat-hint>{{ 'REGISTER.FORM.PASSWORDFIELD.HINT' | translate }} </mat-hint>\r\n\r\n      <mat-error *ngIf=\"password.invalid\">\r\n        <div *ngIf=\"password.errors.required\">\r\n          {{ 'REGISTER.FORM.PASSWORDFIELD.ERROR.REQUIRED' | translate }}\r\n        </div>\r\n        <div *ngIf=\"password.errors.pattern || password.errors.maxlength\">\r\n          {{ 'REGISTER.FORM.PASSWORDFIELD.ERROR.PATTERN' | translate }}\r\n        </div>\r\n      </mat-error>\r\n\r\n      <button\r\n        mat-icon-button\r\n        matSuffix\r\n        (click)=\"hide = !hide\"\r\n        [attr.aria-label]=\"'Hide password'\"\r\n        [attr.aria-pressed]=\"hide\"\r\n      >\r\n        <mat-icon>{{ hide ? 'visibility_off' : 'visibility' }}</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"register-section__form-field\" appearance=\"outline\">\r\n      <mat-label>{{\r\n        'REGISTER.FORM.CONFIRMFIELD.LABEL' | translate\r\n      }}</mat-label>\r\n      <input\r\n        matInput\r\n        type=\"password\"\r\n        formControlName=\"confirmPassword\"\r\n        [type]=\"hide ? 'password' : 'text'\"\r\n        pattern=\"{{ password.value }}\"\r\n        autocomplete=\"off\"\r\n        required\r\n      />\r\n      <mat-hint>{{ 'REGISTER.FORM.CONFIRMFIELD.HINT' | translate }}</mat-hint>\r\n\r\n      <mat-error *ngIf=\"confirmPassword.invalid\">\r\n        <div *ngIf=\"confirmPassword.errors.required\">\r\n          {{ 'REGISTER.FORM.CONFIRMFIELD.ERROR.REQUIRED' | translate }}\r\n        </div>\r\n        <div *ngIf=\"confirmPassword.errors.pattern\">\r\n          {{ 'REGISTER.FORM.CONFIRMFIELD.ERROR.PATTERN' | translate }}\r\n        </div>\r\n      </mat-error>\r\n\r\n      <button\r\n        mat-icon-button\r\n        matSuffix\r\n        (click)=\"hide = !hide\"\r\n        [attr.aria-label]=\"'Hide password'\"\r\n        [attr.aria-pressed]=\"hide\"\r\n      >\r\n        <mat-icon>{{ hide ? 'visibility_off' : 'visibility' }}</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <mat-spinner\r\n      *ngIf=\"loading$ | async\"\r\n      diameter=\"25\"\r\n      color=\"primary\"\r\n    ></mat-spinner>\r\n    <button\r\n      *ngIf=\"(loading$ | async) === false\"\r\n      class=\"register-section__submit mat-spinner\"\r\n      mat-raised-button\r\n      color=\"accent\"\r\n      [disabled]=\"loginForm.invalid\"\r\n    >\r\n      {{ 'REGISTER.FORM.SUBMIT' | translate }}\r\n    </button>\r\n  </form>\r\n</section>\r\n","import { NgModule } from '@angular/core';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatListModule } from '@angular/material/list';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nconst materialModules = [\n  MatSliderModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatSidenavModule,\n  MatButtonModule,\n  MatSelectModule,\n  MatListModule,\n  MatDividerModule,\n  MatMenuModule,\n  MatButtonToggleModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatProgressSpinnerModule,\n  MatDialogModule\n];\n\n@NgModule({\n  imports: [materialModules],\n  exports: [materialModules]\n})\nexport class SharedModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'xbook';\n}\n","<router-outlet></router-outlet>\n","import { Component, DoCheck, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport { Actions, ofActionDispatched, Select, Store } from '@ngxs/store';\nimport { Observable, Subject } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  SendMessage,\n  SendMessageError,\n  SendMessageSuccess\n} from '../../../store/landing.action';\nimport { takeUntil } from 'rxjs/operators';\nimport { AlertComponent } from '../alert/alert.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.scss']\n})\nexport class ContactsComponent implements OnInit, OnDestroy, DoCheck {\n  contactsForm: FormGroup;\n  subject = new Subject();\n  successTitle: string;\n  successDescription: string;\n  errorTitle: string;\n  errorDescription: string;\n\n  @Select((state) => state.landingState.loading)\n  loading$: Observable<boolean>;\n\n  ngOnInit(): void {\n    this.contactsForm = new FormGroup({\n      name: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(30)\n      ]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      message: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(250)\n      ])\n    });\n\n    this.actions$\n      .pipe(ofActionDispatched(SendMessageSuccess), takeUntil(this.subject))\n      .subscribe(() => {\n        this.dialog.open(AlertComponent, {\n          data: {\n            title: this.successTitle,\n            description: this.successDescription,\n            style: 'primary',\n            icon: 'check_circle'\n          }\n        });\n      });\n\n    this.actions$\n      .pipe(ofActionDispatched(SendMessageError), takeUntil(this.subject))\n      .subscribe(() => {\n        this.dialog.open(AlertComponent, {\n          data: {\n            title: this.errorTitle,\n            description: this.errorDescription,\n            style: 'warn',\n            icon: 'error_outline'\n          }\n        });\n      });\n  }\n\n  ngDoCheck(): void {\n    this.translate\n      .get('ALERT.CONTACTS.SUCCESS')\n      .pipe(takeUntil(this.subject))\n      .subscribe((translated) => {\n        this.successTitle = translated.TITLE;\n        this.successDescription = translated.DESCRIPTION;\n      });\n\n    this.translate\n      .get('ALERT.CONTACTS.ERROR')\n      .pipe(takeUntil(this.subject))\n      .subscribe((translated) => {\n        this.errorTitle = translated.TITLE;\n        this.errorDescription = translated.DESCRIPTION;\n      });\n  }\n\n  get name(): AbstractControl {\n    return this.contactsForm.get('name');\n  }\n\n  get email(): AbstractControl {\n    return this.contactsForm.get('email');\n  }\n\n  get message(): AbstractControl {\n    return this.contactsForm.get('message');\n  }\n\n  constructor(\n    private store: Store,\n    public dialog: MatDialog,\n    private actions$: Actions,\n    public translate: TranslateService\n  ) {}\n\n  onSubmit({ value }: { value: Record<string, string> }): void {\n    const messageRequest = {\n      name: value.name,\n      email: value.email,\n      message: value.message\n    };\n\n    this.store.dispatch(new SendMessage(messageRequest));\n  }\n\n  ngOnDestroy(): void {\n    this.subject.next();\n    this.subject.complete();\n  }\n}\n","<section class=\"contacts\">\n  <div class=\"contacts__nav\">\n    <h1 class=\"contacts__nav-heading\">{{ 'CONTACTS.TITLE' | translate }}</h1>\n  </div>\n\n  <form\n    class=\"contacts__form\"\n    [formGroup]=\"contactsForm\"\n    (ngSubmit)=\"onSubmit(contactsForm)\"\n  >\n    <mat-form-field class=\"contacts__form-field\" appearance=\"outline\">\n      <mat-label>{{ 'CONTACTS.FORM.NAMEFIELD.LABEL' | translate }}</mat-label>\n      <input\n        matInput\n        type=\"text\"\n        formControlName=\"name\"\n        required\n        autocomplete=\"off\"\n      />\n      <mat-hint>{{ 'CONTACTS.FORM.NAMEFIELD.HINT' | translate }}</mat-hint>\n\n      <mat-error *ngIf=\"name.invalid\">\n        <div *ngIf=\"name.errors.required\">\n          {{ 'CONTACTS.FORM.NAMEFIELD.ERROR.REQUIRED' | translate }}\n        </div>\n        <div *ngIf=\"name.errors.maxlength\">\n          {{ 'CONTACTS.FORM.NAMEFIELD.ERROR.PATTERN' | translate }}\n        </div>\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"contacts__form-field\" appearance=\"outline\">\n      <mat-label>{{ 'CONTACTS.FORM.EMAILFIELD.LABEL' | translate }}</mat-label>\n      <input\n        matInput\n        type=\"email\"\n        placeholder=\"pat@example.com\"\n        formControlName=\"email\"\n        autocomplete=\"off\"\n        required\n      />\n      <mat-hint>{{ 'CONTACTS.FORM.EMAILFIELD.HINT' | translate }}</mat-hint>\n\n      <mat-error *ngIf=\"email.invalid\">\n        <div *ngIf=\"email.errors.required\">\n          {{ 'CONTACTS.FORM.EMAILFIELD.ERROR.REQUIRED' | translate }}\n        </div>\n        <div *ngIf=\"email.errors.email\">\n          {{ 'CONTACTS.FORM.EMAILFIELD.ERROR.PATTERN' | translate }}\n        </div>\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"contacts__form-field\" appearance=\"outline\">\n      <mat-label>{{\n        'CONTACTS.FORM.MESSAGEFIELD.LABEL' | translate\n      }}</mat-label>\n      <textarea\n        class=\"contacts__form-field-textarea\"\n        matInput\n        formControlName=\"message\"\n        required\n      ></textarea>\n      <mat-hint>{{ 'CONTACTS.FORM.MESSAGEFIELD.HINT' | translate }}</mat-hint>\n\n      <mat-error *ngIf=\"message.invalid\">\n        <div *ngIf=\"message.errors.required\">\n          {{ 'CONTACTS.FORM.MESSAGEFIELD.ERROR.REQUIRED' | translate }}\n        </div>\n        <div *ngIf=\"message.errors.maxlength\">\n          {{ 'CONTACTS.FORM.MESSAGEFIELD.ERROR.PATTERN' | translate }}\n        </div>\n      </mat-error>\n    </mat-form-field>\n\n    <mat-spinner\n      *ngIf=\"loading$ | async\"\n      diameter=\"25\"\n      color=\"primary\"\n    ></mat-spinner>\n    <button\n      *ngIf=\"(loading$ | async) === false\"\n      class=\"contacts__submit mat-spinner\"\n      mat-raised-button\n      color=\"accent\"\n      [disabled]=\"contactsForm.invalid\"\n    >\n      {{ 'CONTACTS.FORM.SUBMIT' | translate }}\n    </button>\n  </form>\n</section>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomepageComponent } from './components/homepage/homepage.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { ContactsComponent } from './components/contacts/contacts.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'landing',\r\n    children: [\r\n      { path: '', component: HomepageComponent },\r\n      { path: 'about', component: AboutComponent },\r\n      { path: 'contacts', component: ContactsComponent },\r\n      { path: 'login', component: LoginComponent }\r\n    ],\r\n    component: MainComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LandingRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { LandingRoutingModule } from './landing-routing.module';\r\n\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { HomepageComponent } from './components/homepage/homepage.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { ContactsComponent } from './components/contacts/contacts.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AlertComponent } from './components/alert/alert.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MainComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    HomepageComponent,\r\n    RegisterComponent,\r\n    AboutComponent,\r\n    ContactsComponent,\r\n    LoginComponent,\r\n    AlertComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    LandingRoutingModule,\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class LandingModule {}\r\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { IAlert } from '../../../core/interfaces/alert.interface';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss']\n})\nexport class AlertComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: IAlert) {}\n}\n","<div class=\"alert\">\n  <span class=\"material-icons {{ data.style }}\"> {{ data.icon }} </span>\n  <h1 class=\"alert__title\" mat-dialog-title>{{ data.title }}</h1>\n  <div\n    [innerHTML]=\"data.description\"\n    class=\"alert__description {{ data.style }}\"\n    mat-dialog-content\n  ></div>\n  <div mat-dialog-actions>\n    <button mat-button mat-dialog-close routerLink=\"{{ data.redirectTo }}\">\n      OK\n    </button>\n  </div>\n</div>\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { environment } from '../environments/environment';\n\nimport { AppComponent } from './app.component';\nimport { HttpLoaderFactory } from './core/services/translation.service';\nimport { initializeApp, StartupService } from './core/services/startup.service';\nimport { LandingModule } from './landing/landing.module';\nimport { SharedModule } from './shared/shared.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LandingState } from './store/landing.state';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n\n    SharedModule,\n    LandingModule,\n    AppRoutingModule,\n\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n\n    NgxsModule.forRoot([LandingState], {\n      developmentMode: !environment.production\n    }),\n    NgxsReduxDevtoolsPluginModule.forRoot(),\n    NgxsLoggerPluginModule.forRoot()\n  ],\n  providers: [\n    StartupService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializeApp,\n      deps: [StartupService],\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\r\nimport Backendless from 'backendless';\r\nimport { Action, State, StateContext, Store } from '@ngxs/store';\r\nimport { Router } from '@angular/router';\r\n\r\nimport {\r\n  RegisterUser,\r\n  RegisterUserError,\r\n  RegisterUserSuccess,\r\n  SendMessage,\r\n  SendMessageError,\r\n  SendMessageSuccess,\r\n  UserExists\r\n} from './landing.action';\r\nimport { IRegisterRequest } from '../core/interfaces/register.interface';\r\nimport { ILandingState } from '../core/interfaces/landing.interface';\r\n\r\n@State<ILandingState>({\r\n  name: 'landingState',\r\n  defaults: {\r\n    user: null,\r\n    loading: false,\r\n    userExists: false\r\n  }\r\n})\r\n@Injectable()\r\nexport class LandingState {\r\n  constructor(private router: Router, private store: Store) {}\r\n\r\n  @Action(RegisterUser)\r\n  registerUser(ctx: StateContext<ILandingState>, { user }: RegisterUser): void {\r\n    const patchState = ctx.patchState;\r\n\r\n    patchState({\r\n      loading: true\r\n    });\r\n\r\n    Backendless.UserService.register<IRegisterRequest>(user)\r\n      .then((result: IRegisterRequest) => {\r\n        console.log('Registered User:', result);\r\n\r\n        this.store.dispatch(new RegisterUserSuccess(user));\r\n      })\r\n      .catch((error) => {\r\n        console.error('Can not Register User:', error.message);\r\n\r\n        this.store.dispatch(new RegisterUserError());\r\n      });\r\n  }\r\n\r\n  @Action(RegisterUserSuccess)\r\n  registerUserSuccess(\r\n    ctx: StateContext<ILandingState>,\r\n    { user }: RegisterUser\r\n  ): void {\r\n    ctx.patchState({\r\n      user: { ...user },\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  @Action(RegisterUserError)\r\n  registerUserError(ctx: StateContext<ILandingState>): void {\r\n    ctx.patchState({\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  @Action(UserExists)\r\n  userExists(ctx: StateContext<ILandingState>, { username }: UserExists): void {\r\n    const query = Backendless.DataQueryBuilder.create().setWhereClause(\r\n      `username = '${username}'`\r\n    );\r\n\r\n    Backendless.Data.of('Users')\r\n      .find(query)\r\n      .then((foundContacts) => {\r\n        if (foundContacts.length > 0) {\r\n          ctx.patchState({\r\n            userExists: true\r\n          });\r\n        } else {\r\n          ctx.patchState({\r\n            userExists: false\r\n          });\r\n        }\r\n      })\r\n      .catch((fault) => {\r\n        console.log(fault);\r\n      });\r\n  }\r\n\r\n  @Action(SendMessage)\r\n  sendMessage(\r\n    ctx: StateContext<ILandingState>,\r\n    { message }: SendMessage\r\n  ): void {\r\n    ctx.patchState({\r\n      loading: true\r\n    });\r\n\r\n    Backendless.Data.of('Contacts')\r\n      .save(message)\r\n      .then((success) => {\r\n        console.log(success);\r\n\r\n        this.store.dispatch(new SendMessageSuccess());\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n\r\n        this.store.dispatch(new SendMessageError());\r\n      });\r\n  }\r\n\r\n  @Action(SendMessageSuccess)\r\n  sendMessageSuccess(ctx: StateContext<ILandingState>): void {\r\n    ctx.patchState({\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  @Action(SendMessageError)\r\n  sendMessageError(ctx: StateContext<ILandingState>): void {\r\n    ctx.patchState({\r\n      loading: false\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {}\n","<mat-toolbar color=\"primary\" class=\"footer\">\n  <div class=\"footer__container\">\n    <div class=\"footer__nav\">\n      <a href=\"#\" class=\"footer__link-logo\">\n        <img style=\"width: 100px\" src=\"assets/img/xbook-logo.png\" alt=\"Logo\" />\n      </a>\n\n      <!--      <mat-nav-list class=\"footer__nav-list\">-->\n      <!--        <a class=\"footer__nav-list-item mat-body-1\" mat-list-item href=\"#\">Home</a>-->\n      <!--        <a class=\"footer__nav-list-item mat-body-1\" mat-list-item href=\"#\">About</a>-->\n      <!--        <a class=\"footer__nav-list-item mat-body-1\" mat-list-item href=\"#\">Contacts</a>-->\n      <!--      </mat-nav-list>-->\n\n      <div class=\"footer__copyright mat-caption\">\n        ©Copyright. All rights reserved\n      </div>\n    </div>\n\n    <!--    <mat-divider class=\"footer__mat-divider\"></mat-divider>-->\n  </div>\n</mat-toolbar>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport function HttpLoaderFactory(httpClient: HttpClient): any {\n  return new TranslateHttpLoader(httpClient);\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslationService {\n  constructor(public translate: TranslateService) {}\n\n  init(): void {\n    this.translate.addLangs(['en', 'uk']);\n    this.translate.setDefaultLang('en');\n\n    const browserLang = this.translate.getBrowserLang();\n    const storageLang = localStorage.getItem('language');\n\n    this.translate.use(storageLang ? storageLang : browserLang);\n  }\n\n  selectLanguage(lang): void {\n    this.translate.use(lang);\n    localStorage.setItem('language', lang);\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"header mat-elevation-z6\">\n  <div class=\"header__nav\">\n    <a class=\"header__nav-logo\" routerLink=\"/\">\n      <img src=\"assets/img/xbook-logo.png\" alt=\"XBook\" />\n    </a>\n\n    <mat-nav-list class=\"header__nav-list\">\n      <a\n        class=\"header__nav-list-item mat-body-1\"\n        mat-list-item\n        routerLink=\"/\"\n        >{{ 'HEADER.NAV.HOME' | translate }}</a\n      >\n      <a\n        class=\"header__nav-list-item mat-body-1\"\n        mat-list-item\n        routerLink=\"/landing/about\"\n        >{{ 'HEADER.NAV.ABOUT' | translate }}</a\n      >\n      <a\n        class=\"header__nav-list-item mat-body-1\"\n        mat-list-item\n        routerLink=\"/landing/contacts\"\n        >{{ 'HEADER.NAV.CONTACTS' | translate }}</a\n      >\n    </mat-nav-list>\n  </div>\n\n  <div class=\"header__controls\">\n    <mat-menu #langMenu class=\"header__controls-select\">\n      <button\n        class=\"header__controls-option\"\n        mat-menu-item\n        *ngFor=\"let lang of translate.getLangs()\"\n        [value]=\"lang\"\n        (click)=\"onSelect(lang)\"\n      >\n        {{ lang }}\n      </button>\n    </mat-menu>\n\n    <button\n      class=\"header__controls-lang\"\n      mat-button\n      [mat-menu-trigger-for]=\"langMenu\"\n    >\n      {{ translate.store.currentLang }}\n    </button>\n\n    <a\n      href=\"https://github.com/ShyianO/XBook\"\n      class=\"header__controls-link\"\n      target=\"_blank\"\n    >\n      <img src=\"assets/img/github-logo.png\" alt=\"Github\" />\n      <span class=\"header__controls-link-name mat-body-1\">GitHub</span>\n    </a>\n  </div>\n</mat-toolbar>\n","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { TranslationService } from '../../../core/services/translation.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  constructor(\n    public translate: TranslateService,\n    public translationService: TranslationService\n  ) {}\n\n  onSelect(lang): void {\n    this.translationService.selectLanguage(lang);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'landing',\r\n    loadChildren: () =>\r\n      import('./landing/landing.module').then((m) => m.LandingModule)\r\n  },\r\n  { path: '**', redirectTo: 'landing', pathMatch: 'full' },\r\n\r\n  { path: '', redirectTo: '/landing', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Injectable } from '@angular/core';\n\nimport { TranslationService } from './translation.service';\nimport { BackendlessService } from './backendless.service';\n\nexport function initializeApp(startupInitService: StartupService): any {\n  return (): Promise<any> => {\n    return startupInitService.init();\n  };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StartupService {\n  constructor(\n    private translateService: TranslationService,\n    private backendlessService: BackendlessService\n  ) {}\n\n  init(): any {\n    return new Promise<void>((resolve) => {\n      this.translateService.init();\n      this.backendlessService.init();\n      resolve();\n    });\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}